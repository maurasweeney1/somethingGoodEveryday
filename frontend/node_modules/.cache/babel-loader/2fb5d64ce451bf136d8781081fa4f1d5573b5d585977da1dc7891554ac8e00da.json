{"ast":null,"code":"import MainPage from\"./Home.js\";import AddPostsPage from\"./AddPosts.js\";import EditPostPage from\"./editPosts.js\";import ProtectedRoute from\"./ProtectedRoute\";import RegisterPage from\"./Register.js\";import SignInPage from\"./SignIn.js\";import LandingPage from\"./Landing.js\";import\"./App.css\";import{BrowserRouter,Routes,Route}from\"react-router-dom\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[posts,setPosts]=useState([]);const[lightMode,setLightMode]=useState(true);const[authToken,setAuthTokenState]=useState(localStorage.getItem(\"authToken\")||null);const[userId,setUserId]=useState(null);// Fetch posts when component mounts\nuseEffect(()=>{const fetchPosts=async()=>{if(!authToken){console.log(\"no token\");return;}try{const authToken=localStorage.getItem(\"authToken\");const response=await fetch(\"http://localhost:5001/\",{method:\"GET\",headers:{Authorization:`Bearer ${authToken}`,\"Content-Type\":\"application/json\"}});if(!response.ok){if(response.status===401){console.log(\"No valid token, please log in\");return;}throw new Error(\"Network response was not ok\");}const data=await response.json();setPosts(data);}catch(error){console.error(\"Error fetching posts:\",error);setPosts([]);}};fetchPosts();},[authToken]);const updateColorTheme=isLightMode=>{setLightMode(isLightMode);if(isLightMode){document.body.classList.remove(\"dark-mode\");document.body.classList.add(\"light-mode\");document.querySelector(\"header\").classList.remove(\"dark-mode\");document.querySelector(\"header\").classList.add(\"light-mode\");document.querySelector(\"footer\").classList.remove(\"dark-mode\");document.querySelector(\"footer\").classList.add(\"light-mode\");}else{document.body.classList.remove(\"light-mode\");document.body.classList.add(\"dark-mode\");document.querySelector(\"header\").classList.remove(\"light-mode\");document.querySelector(\"header\").classList.add(\"dark-mode\");document.querySelector(\"footer\").classList.remove(\"light-mode\");document.querySelector(\"footer\").classList.add(\"dark-mode\");}};const addNewPost=async newPost=>{try{const formData=new FormData();// Append all text fields\nformData.append(\"category\",newPost.category);formData.append(\"title\",newPost.title);formData.append(\"text\",newPost.text);formData.append(\"link\",newPost.link);formData.append(\"datePosted\",newPost.datePosted);// Append image file if exists\nif(newPost.image instanceof File){formData.append(\"image\",newPost.image);}const token=localStorage.getItem(\"token\");const response=await fetch(\"http://localhost:5001/add-post\",{method:\"POST\",headers:{Authorization:`Bearer ${token}`},body:formData});if(!response.ok){const errorBody=await response.text();console.error(\"Server response:\",errorBody);throw new Error(`HTTP error! status: ${response.status}, message: ${errorBody}`);}const savedPost=await response.json();setPosts([...posts,savedPost]);return savedPost;}catch(error){console.error(\"Detailed error adding post:\",error);throw error;}};const updatePost=async(postId,updatedPost,token)=>{try{const response=await fetch(`http://localhost:5001/edit/${postId}`,{method:\"PUT\",headers:{Authorization:`Bearer ${token}`},body:updatedPost});if(!response.ok){const errorText=await response.text();console.error(\"Server error response:\",errorText);throw new Error(`Network response was not ok: ${errorText}`);}const savedPost=await response.json();setPosts(posts.map(post=>post._id===postId?savedPost:post));return savedPost;}catch(error){console.error(\"Detailed error updating post:\",error);throw error;}};const setAuthToken=token=>{if(token){localStorage.setItem(\"authToken\",token);}else{localStorage.removeItem(\"authToken\");}setAuthTokenState(token);};return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LandingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/home\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(MainPage,{setPosts:setPosts,posts:posts,lightMode:lightMode,updateColorTheme:updateColorTheme})})}),/*#__PURE__*/_jsx(Route,{path:\"/add-post\",element:/*#__PURE__*/_jsx(AddPostsPage,{addNewPost:addNewPost,userId:userId})}),/*#__PURE__*/_jsx(Route,{path:\"/edit/:postId\",element:/*#__PURE__*/_jsx(EditPostPage,{posts:posts,updatePost:updatePost,token:authToken})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(RegisterPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/signIn\",element:/*#__PURE__*/_jsx(SignInPage,{setAuthToken:setAuthToken,setUserId:setUserId})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"404 Error- Not Found\"})})})]})});}export default App;","map":{"version":3,"names":["MainPage","AddPostsPage","EditPostPage","ProtectedRoute","RegisterPage","SignInPage","LandingPage","BrowserRouter","Routes","Route","React","useState","useEffect","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","posts","setPosts","lightMode","setLightMode","authToken","setAuthTokenState","localStorage","getItem","userId","setUserId","fetchPosts","console","log","response","fetch","method","headers","Authorization","ok","status","Error","data","json","error","updateColorTheme","isLightMode","document","body","classList","remove","add","querySelector","addNewPost","newPost","formData","FormData","append","category","title","text","link","datePosted","image","File","token","errorBody","savedPost","updatePost","postId","updatedPost","errorText","map","post","_id","setAuthToken","setItem","removeItem","children","path","element"],"sources":["/Users/maurasweeney/Desktop/CS/CPSC332/cpsc-332-web-dev-final-project-maurasweeney1/frontend/src/App.js"],"sourcesContent":["import MainPage from \"./Home.js\";\nimport AddPostsPage from \"./AddPosts.js\";\nimport EditPostPage from \"./editPosts.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport RegisterPage from \"./Register.js\";\nimport SignInPage from \"./SignIn.js\";\nimport LandingPage from \"./Landing.js\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [lightMode, setLightMode] = useState(true);\n  const [authToken, setAuthTokenState] = useState(\n    localStorage.getItem(\"authToken\") || null\n  );\n  const [userId, setUserId] = useState(null);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    const fetchPosts = async () => {\n      if (!authToken) {\n        console.log(\"no token\");\n        return;\n      }\n\n      try {\n        const authToken = localStorage.getItem(\"authToken\");\n\n        const response = await fetch(\"http://localhost:5001/\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          if (response.status === 401) {\n            console.log(\"No valid token, please log in\");\n            return;\n          }\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setPosts([]);\n      }\n    };\n\n    fetchPosts();\n  }, [authToken]);\n\n  const updateColorTheme = (isLightMode) => {\n    setLightMode(isLightMode);\n    if (isLightMode) {\n      document.body.classList.remove(\"dark-mode\");\n      document.body.classList.add(\"light-mode\");\n      document.querySelector(\"header\").classList.remove(\"dark-mode\");\n      document.querySelector(\"header\").classList.add(\"light-mode\");\n      document.querySelector(\"footer\").classList.remove(\"dark-mode\");\n      document.querySelector(\"footer\").classList.add(\"light-mode\");\n    } else {\n      document.body.classList.remove(\"light-mode\");\n      document.body.classList.add(\"dark-mode\");\n      document.querySelector(\"header\").classList.remove(\"light-mode\");\n      document.querySelector(\"header\").classList.add(\"dark-mode\");\n      document.querySelector(\"footer\").classList.remove(\"light-mode\");\n      document.querySelector(\"footer\").classList.add(\"dark-mode\");\n    }\n  };\n\n  const addNewPost = async (newPost) => {\n    try {\n      const formData = new FormData();\n\n      // Append all text fields\n      formData.append(\"category\", newPost.category);\n      formData.append(\"title\", newPost.title);\n      formData.append(\"text\", newPost.text);\n      formData.append(\"link\", newPost.link);\n      formData.append(\"datePosted\", newPost.datePosted);\n\n      // Append image file if exists\n      if (newPost.image instanceof File) {\n        formData.append(\"image\", newPost.image);\n      }\n\n      const token = localStorage.getItem(\"token\");\n\n      const response = await fetch(\"http://localhost:5001/add-post\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorBody = await response.text();\n        console.error(\"Server response:\", errorBody);\n        throw new Error(\n          `HTTP error! status: ${response.status}, message: ${errorBody}`\n        );\n      }\n      const savedPost = await response.json();\n\n      setPosts([...posts, savedPost]);\n      return savedPost;\n    } catch (error) {\n      console.error(\"Detailed error adding post:\", error);\n      throw error;\n    }\n  };\n\n  const updatePost = async (postId, updatedPost, token) => {\n    try {\n      const response = await fetch(`http://localhost:5001/edit/${postId}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: updatedPost,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Server error response:\", errorText);\n        throw new Error(`Network response was not ok: ${errorText}`);\n      }\n\n      const savedPost = await response.json();\n\n      setPosts(posts.map((post) => (post._id === postId ? savedPost : post)));\n\n      return savedPost;\n    } catch (error) {\n      console.error(\"Detailed error updating post:\", error);\n      throw error;\n    }\n  };\n\n  const setAuthToken = (token) => {\n    if (token) {\n      localStorage.setItem(\"authToken\", token);\n    } else {\n      localStorage.removeItem(\"authToken\");\n    }\n    setAuthTokenState(token);\n  };\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        {/* landing page */}\n        <Route path=\"/\" element={<LandingPage />} />\n        {/* main page */}\n        <Route\n          path=\"/home\"\n          element={\n            <ProtectedRoute>\n              <MainPage\n                setPosts={setPosts}\n                posts={posts}\n                lightMode={lightMode}\n                updateColorTheme={updateColorTheme}\n              />\n            </ProtectedRoute>\n          }\n        />\n        {/* add post page */}\n        <Route\n          path=\"/add-post\"\n          element={<AddPostsPage addNewPost={addNewPost} userId={userId} />}\n        />\n        {/* edit post page */}\n        <Route\n          path=\"/edit/:postId\"\n          element={\n            <EditPostPage\n              posts={posts}\n              updatePost={updatePost}\n              token={authToken}\n            />\n          }\n        />\n        <Route path=\"/register\" element={<RegisterPage />} />\n        <Route\n          path=\"/signIn\"\n          element={\n            <SignInPage setAuthToken={setAuthToken} setUserId={setUserId} />\n          }\n        />\n        {/* url not found */}\n        <Route\n          path=\"*\"\n          element={\n            <>\n              <h1>404 Error- Not Found</h1>\n            </>\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}