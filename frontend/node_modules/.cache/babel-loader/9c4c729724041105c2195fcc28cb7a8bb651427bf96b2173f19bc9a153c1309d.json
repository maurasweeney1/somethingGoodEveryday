{"ast":null,"code":"var _jsxFileName = \"/Users/maurasweeney/Desktop/CS/CPSC332/cpsc-332-web-dev-final-project-maurasweeney1/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport MainPage from \"./Home.js\";\nimport AddPostsPage from \"./AddPosts.js\";\nimport EditPostPage from \"./editPosts.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport RegisterPage from \"./Register.js\";\nimport SignInPage from \"./SignIn.js\";\nimport LandingPage from \"./Landing.js\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [lightMode, setLightMode] = useState(true);\n  const [authToken, setAuthTokenState] = useState(localStorage.getItem(\"authToken\") || null);\n  const [userId, setUserId] = useState(null);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    const fetchPosts = async () => {\n      if (!authToken) {\n        console.log(\"no token\");\n        return;\n      }\n      try {\n        const authToken = localStorage.getItem(\"authToken\");\n        const response = await fetch(\"http://localhost:5001/\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 401) {\n            console.log(\"No valid token, please log in\");\n            return;\n          }\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setPosts([]);\n      }\n    };\n    fetchPosts();\n  }, [authToken]);\n  const updateColorTheme = isLightMode => {\n    setLightMode(isLightMode);\n    if (isLightMode) {\n      document.body.classList.remove(\"dark-mode\");\n      document.body.classList.add(\"light-mode\");\n      document.querySelector(\"header\").classList.remove(\"dark-mode\");\n      document.querySelector(\"header\").classList.add(\"light-mode\");\n      document.querySelector(\"footer\").classList.remove(\"dark-mode\");\n      document.querySelector(\"footer\").classList.add(\"light-mode\");\n    } else {\n      document.body.classList.remove(\"light-mode\");\n      document.body.classList.add(\"dark-mode\");\n      document.querySelector(\"header\").classList.remove(\"light-mode\");\n      document.querySelector(\"header\").classList.add(\"dark-mode\");\n      document.querySelector(\"footer\").classList.remove(\"light-mode\");\n      document.querySelector(\"footer\").classList.add(\"dark-mode\");\n    }\n  };\n  const addNewPost = async newPost => {\n    try {\n      const formData = new FormData();\n\n      // Append all text fields\n      formData.append(\"category\", newPost.category);\n      formData.append(\"title\", newPost.title);\n      formData.append(\"text\", newPost.text);\n      formData.append(\"link\", newPost.link);\n      formData.append(\"datePosted\", newPost.datePosted);\n\n      // Append image file if exists\n      if (newPost.image instanceof File) {\n        formData.append(\"image\", newPost.image);\n      }\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:5001/add-post\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const errorBody = await response.text();\n        console.error(\"Server response:\", errorBody);\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorBody}`);\n      }\n      const savedPost = await response.json();\n      setPosts([...posts, savedPost]);\n      return savedPost;\n    } catch (error) {\n      console.error(\"Detailed error adding post:\", error);\n      throw error;\n    }\n  };\n  const updatePost = async (postId, updatedPost, token) => {\n    try {\n      const response = await fetch(`http://localhost:5001/edit/${postId}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: updatedPost\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Server error response:\", errorText);\n        throw new Error(`Network response was not ok: ${errorText}`);\n      }\n      const savedPost = await response.json();\n      setPosts(posts.map(post => post._id === postId ? savedPost : post));\n      return savedPost;\n    } catch (error) {\n      console.error(\"Detailed error updating post:\", error);\n      throw error;\n    }\n  };\n  const setAuthToken = token => {\n    if (token) {\n      localStorage.setItem(\"authToken\", token);\n    } else {\n      localStorage.removeItem(\"authToken\");\n    }\n    setAuthTokenState(token);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(MainPage, {\n            setPosts: setPosts,\n            posts: posts,\n            lightMode: lightMode,\n            updateColorTheme: updateColorTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-post\",\n        element: /*#__PURE__*/_jsxDEV(AddPostsPage, {\n          addNewPost: addNewPost,\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit/:postId\",\n        element: /*#__PURE__*/_jsxDEV(EditPostPage, {\n          posts: posts,\n          updatePost: updatePost,\n          token: authToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signIn\",\n        element: /*#__PURE__*/_jsxDEV(SignInPage, {\n          setAuthToken: setAuthToken,\n          setUserId: setUserId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"404 Error- Not Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mhVqOopfA05NfPPYQDDcsWi7xpM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MainPage","AddPostsPage","EditPostPage","ProtectedRoute","RegisterPage","SignInPage","LandingPage","BrowserRouter","Routes","Route","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","lightMode","setLightMode","authToken","setAuthTokenState","localStorage","getItem","userId","setUserId","fetchPosts","console","log","response","fetch","method","headers","Authorization","ok","status","Error","data","json","error","updateColorTheme","isLightMode","document","body","classList","remove","add","querySelector","addNewPost","newPost","formData","FormData","append","category","title","text","link","datePosted","image","File","token","errorBody","savedPost","updatePost","postId","updatedPost","errorText","map","post","_id","setAuthToken","setItem","removeItem","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maurasweeney/Desktop/CS/CPSC332/cpsc-332-web-dev-final-project-maurasweeney1/frontend/src/App.js"],"sourcesContent":["import MainPage from \"./Home.js\";\nimport AddPostsPage from \"./AddPosts.js\";\nimport EditPostPage from \"./editPosts.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport RegisterPage from \"./Register.js\";\nimport SignInPage from \"./SignIn.js\";\nimport LandingPage from \"./Landing.js\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [lightMode, setLightMode] = useState(true);\n  const [authToken, setAuthTokenState] = useState(\n    localStorage.getItem(\"authToken\") || null\n  );\n  const [userId, setUserId] = useState(null);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    const fetchPosts = async () => {\n      if (!authToken) {\n        console.log(\"no token\");\n        return;\n      }\n\n      try {\n        const authToken = localStorage.getItem(\"authToken\");\n\n        const response = await fetch(\"http://localhost:5001/\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) {\n          if (response.status === 401) {\n            console.log(\"No valid token, please log in\");\n            return;\n          }\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setPosts([]);\n      }\n    };\n\n    fetchPosts();\n  }, [authToken]);\n\n  const updateColorTheme = (isLightMode) => {\n    setLightMode(isLightMode);\n    if (isLightMode) {\n      document.body.classList.remove(\"dark-mode\");\n      document.body.classList.add(\"light-mode\");\n      document.querySelector(\"header\").classList.remove(\"dark-mode\");\n      document.querySelector(\"header\").classList.add(\"light-mode\");\n      document.querySelector(\"footer\").classList.remove(\"dark-mode\");\n      document.querySelector(\"footer\").classList.add(\"light-mode\");\n    } else {\n      document.body.classList.remove(\"light-mode\");\n      document.body.classList.add(\"dark-mode\");\n      document.querySelector(\"header\").classList.remove(\"light-mode\");\n      document.querySelector(\"header\").classList.add(\"dark-mode\");\n      document.querySelector(\"footer\").classList.remove(\"light-mode\");\n      document.querySelector(\"footer\").classList.add(\"dark-mode\");\n    }\n  };\n\n  const addNewPost = async (newPost) => {\n    try {\n      const formData = new FormData();\n\n      // Append all text fields\n      formData.append(\"category\", newPost.category);\n      formData.append(\"title\", newPost.title);\n      formData.append(\"text\", newPost.text);\n      formData.append(\"link\", newPost.link);\n      formData.append(\"datePosted\", newPost.datePosted);\n\n      // Append image file if exists\n      if (newPost.image instanceof File) {\n        formData.append(\"image\", newPost.image);\n      }\n\n      const token = localStorage.getItem(\"token\");\n\n      const response = await fetch(\"http://localhost:5001/add-post\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorBody = await response.text();\n        console.error(\"Server response:\", errorBody);\n        throw new Error(\n          `HTTP error! status: ${response.status}, message: ${errorBody}`\n        );\n      }\n      const savedPost = await response.json();\n\n      setPosts([...posts, savedPost]);\n      return savedPost;\n    } catch (error) {\n      console.error(\"Detailed error adding post:\", error);\n      throw error;\n    }\n  };\n\n  const updatePost = async (postId, updatedPost, token) => {\n    try {\n      const response = await fetch(`http://localhost:5001/edit/${postId}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: updatedPost,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Server error response:\", errorText);\n        throw new Error(`Network response was not ok: ${errorText}`);\n      }\n\n      const savedPost = await response.json();\n\n      setPosts(posts.map((post) => (post._id === postId ? savedPost : post)));\n\n      return savedPost;\n    } catch (error) {\n      console.error(\"Detailed error updating post:\", error);\n      throw error;\n    }\n  };\n\n  const setAuthToken = (token) => {\n    if (token) {\n      localStorage.setItem(\"authToken\", token);\n    } else {\n      localStorage.removeItem(\"authToken\");\n    }\n    setAuthTokenState(token);\n  };\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        {/* landing page */}\n        <Route path=\"/\" element={<LandingPage />} />\n        {/* main page */}\n        <Route\n          path=\"/home\"\n          element={\n            <ProtectedRoute>\n              <MainPage\n                setPosts={setPosts}\n                posts={posts}\n                lightMode={lightMode}\n                updateColorTheme={updateColorTheme}\n              />\n            </ProtectedRoute>\n          }\n        />\n        {/* add post page */}\n        <Route\n          path=\"/add-post\"\n          element={<AddPostsPage addNewPost={addNewPost} userId={userId} />}\n        />\n        {/* edit post page */}\n        <Route\n          path=\"/edit/:postId\"\n          element={\n            <EditPostPage\n              posts={posts}\n              updatePost={updatePost}\n              token={authToken}\n            />\n          }\n        />\n        <Route path=\"/register\" element={<RegisterPage />} />\n        <Route\n          path=\"/signIn\"\n          element={\n            <SignInPage setAuthToken={setAuthToken} setUserId={setUserId} />\n          }\n        />\n        {/* url not found */}\n        <Route\n          path=\"*\"\n          element={\n            <>\n              <h1>404 Error- Not Found</h1>\n            </>\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}